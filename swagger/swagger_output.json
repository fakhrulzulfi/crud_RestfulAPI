{
  "swagger": "2.0",
  "openapi": "Enable",
  "info": {
    "title": "RestfulAPI Artikel",
    "description": "<b>RestfulAPI Artikel Sederhana</b> \n\n Teknologi yang digunakan : \n1. NodeJS\n2. ExpressJS\n3. MySQL\n4. ORM Sequelize\n5. SwaggerUI \n\nGithub : https://github.com/fakhrulzulfi",
    "version": "1.0.0"
  },
  "host": "localhost:3000/api",
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [],
  "paths": {
    "/post": {
      "get": {
        "tags": ["Article"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Article"],
        "description": "Endpoint for Insert a new Article",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "ini adalah judul kontennya"
                },
                "content": {
                  "type": "string",
                  "example": "ini adalah isi kontennya"
                },
                "is_published": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Article successfully created"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/post/{postId}": {
      "get": {
        "tags": ["Article"],
        "description": "Endpoint for get an article",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Article"],
        "description": "Endpoint for update an article",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "judul konten yang diupdate"
                },
                "content": {
                  "type": "string",
                  "example": "isi konten yang ingin diupdate"
                },
                "is_published": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Article"],
        "description": "Endpoint for delete an article",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "description": "Endpoint for get All User (Admin Only)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": ["User"],
        "description": "Endpoint for get an user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "description": "Endpoint for update an user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Fakhrul_zulfi"
                },
                "password": {
                  "type": "string",
                  "example": "GantiPassword1YangKuatNih"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "description": "Endpoint for delete an user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "example": "Bearer eyJhbGciOiJ..."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "description": "Endpoint for Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login and get Token",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Fakhrulzulfi"
                },
                "password": {
                  "type": "string",
                  "example": "iniPasswordAKuBanget"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Wrong Password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rtoken": {
      "post": {
        "tags": ["Authentication"],
        "description": "Endpoint for Generate a new Token",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "object",
              "properties": {
                "authorization": {
                  "type": "string",
                  "example": "eyJ0eXAiOAAOI..."
                }
              },
              "required": ["authorization"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Endpoint for Insert a new user or Register user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "zulfi"
                },
                "password": {
                  "type": "string",
                  "example": "passWordZoel"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}